# Generated file - do not edit directly

from typing import Protocol, ClassVar
from ft_icon.icon import Icon

class IconClass(Protocol):
    """Available icon methods"""
    @classmethod
    def lightning(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def search(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def volume_off(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def hamburger(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def right_arrow(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def user(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def home(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def file(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def smol_moon(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def x(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def smol_sun(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def question(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def menu_bars(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def three_dots(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def clipboard(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def key(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def theme_generator(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def mockup(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def store(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def settings(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def archive(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def actions(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def data_input(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def left_arrow(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def warning(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def notification_bell(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def email(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def info(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def add_doc(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def close(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def volume_on(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def circled_check(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def image(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def navigation(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def facebook(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def feedback(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def down_caret(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def hashtag(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def folder_2(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def sun(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def edit(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def bug(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def youtube(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def search_circle(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def menu_bars_uneven(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def data_display(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def success(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def docs(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def twitter(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def heart2(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def menu_bars_short(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def error(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def components(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def shopping_cart(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def stats(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def folder(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def clipboard_check(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def moon(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def layout(cls, *args, **kwargs) -> Icon: ...
    @classmethod
    def heart(cls, *args, **kwargs) -> Icon: ...

# Type hint for Icon class
IconType = IconClass
